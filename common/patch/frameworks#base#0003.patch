From a4736836bde08c204ed59b1f9d64a4df7203f579 Mon Sep 17 00:00:00 2001
From: Stark Li <stark.li@amlogic.com>
Date: Thu, 1 Jun 2017 14:14:04 +0800
Subject: [PATCH 3/3] PD#143504: Update primary device's HDR infomation when
 hotplug.

Change-Id: Icae86d19e05d5ee324b9bdc998395329bc0511e2
---
 .../android/server/display/LocalDisplayAdapter.java    | 18 +++++++++++++++++-
 1 file changed, 17 insertions(+), 1 deletion(-)
 mode change 100644 => 100755 services/core/java/com/android/server/display/LocalDisplayAdapter.java

diff --git a/services/core/java/com/android/server/display/LocalDisplayAdapter.java b/services/core/java/com/android/server/display/LocalDisplayAdapter.java
old mode 100644
new mode 100755
index 8673225..1aa2b56
--- a/services/core/java/com/android/server/display/LocalDisplayAdapter.java
+++ b/services/core/java/com/android/server/display/LocalDisplayAdapter.java
@@ -124,6 +124,11 @@ final class LocalDisplayAdapter extends DisplayAdapter {
                 // Display properties changed.
                 sendDisplayDeviceEventLocked(device, DISPLAY_DEVICE_EVENT_CHANGED);
             }
+            // Update color modes && hdr capabilities.
+            if (device != null) {
+                device.updateColorModesLocked(colorModes, activeColorMode);
+                device.updateHdrCapabilities(displayToken);
+            }
         } else {
             // The display is no longer available. Ignore the attempt to add it.
             // If it was connected but has already been disconnected, we'll get a
@@ -187,7 +192,7 @@ final class LocalDisplayAdapter extends DisplayAdapter {
             } else {
                 mBacklight = null;
             }
-            mHdrCapabilities = SurfaceControl.getHdrCapabilities(displayToken);
+            updateHdrCapabilities(displayToken);
         }
 
         @Override
@@ -195,6 +200,11 @@ final class LocalDisplayAdapter extends DisplayAdapter {
             return true;
         }
 
+        public boolean updateHdrCapabilities(IBinder displayToken) {
+            mHdrCapabilities = SurfaceControl.getHdrCapabilities(displayToken);
+            return true;
+        }
+
         public boolean updatePhysicalDisplayInfoLocked(
                 SurfaceControl.PhysicalDisplayInfo[] physicalDisplayInfos, int activeDisplayInfo,
                 int[] colorModes, int activeColorMode) {
@@ -614,6 +624,12 @@ final class LocalDisplayAdapter extends DisplayAdapter {
                 pw.print(mSupportedColorModes.get(i));
             }
             pw.println("]");
+            int [] hdrtypes = mHdrCapabilities.getSupportedHdrTypes();
+            pw.print("mHdrCapabilities=[  ");
+            for (int type : hdrtypes) {
+                pw.print(type+"  ");
+            }
+            pw.println("]");
         }
 
         private int findDisplayInfoIndexLocked(int modeId) {
-- 
2.7.4

